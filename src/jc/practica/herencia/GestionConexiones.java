/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jc.practica.herencia;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.ListModel;

/**
 *
 * @author jcpalma
 */
public class GestionConexiones extends javax.swing.JFrame {

    private List<Conexion> conexiones = new ArrayList<>();

    /**
     * Creates new form GestionConexios
     */
    public GestionConexiones() {
        initComponents();
        createConections();
        loadConections();
    }

    private final void createConections() {
        conexiones.add(new ConexionMySQL());
        conexiones.add(new ConexionOracle());
        conexiones.add(new ConexionChafa());
    }

    private final void loadConections() {
        lstConexiones.setCellRenderer(new ConectionItemRenderer());
        DefaultListModel<ConectionItem> model = new DefaultListModel<>();
        lstConexiones.setModel(model);
        for (Conexion c : conexiones) {
            model.addElement(new ConectionItem(c));
        }

    }

    public static class ConectionItem {

        private final Conexion cxn;

        private boolean selected = false;

        public ConectionItem(Conexion cxn) {
            this.cxn = cxn;
        }

        /**
         * @return the selected
         */
        public boolean isSelected() {
            return selected;
        }

        /**
         * @param selected the selected to set
         */
        public void setSelected(boolean selected) {
            this.selected = selected;
        }

        @Override
        public String toString() {
            return this.cxn.toString();
        }

    }

    public static class ConectionItemRenderer extends JCheckBox implements ListCellRenderer<ConectionItem> {

        @Override
        public Component getListCellRendererComponent(JList<? extends ConectionItem> list, ConectionItem value, int index, boolean isSelected, boolean cellHasFocus) {
            setEnabled(list.isEnabled());
            setSelected(value.isSelected());
            //setFont(list.getFont());
            setBackground(list.getBackground());
            setForeground(list.getForeground());
            setText(value.toString());
            return this;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConexiones = new javax.swing.JLabel();
        scrConexiones = new javax.swing.JScrollPane();
        lstConexiones = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblConexiones.setText("Conexiones:");
        lblConexiones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lstConexiones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstConexionesMouseClicked(evt);
            }
        });
        scrConexiones.setViewportView(lstConexiones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblConexiones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrConexiones, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblConexiones, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrConexiones, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstConexionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstConexionesMouseClicked
        JList<ConectionItem> list = (JList<ConectionItem>) evt.getSource();
        
        int index = list.locationToIndex(evt.getPoint());
        
        ConectionItem item = list.getModel().getElementAt(index);
        item.setSelected(!item.isSelected());
        list.repaint(list.getCellBounds(index, index));
        
    }//GEN-LAST:event_lstConexionesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionConexiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionConexiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionConexiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionConexiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionConexiones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblConexiones;
    private javax.swing.JList<ConectionItem> lstConexiones;
    private javax.swing.JScrollPane scrConexiones;
    // End of variables declaration//GEN-END:variables
}
